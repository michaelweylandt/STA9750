---
title: "{{< var course.short >}} Week {{< meta pa_num >}} Pre Assignment: {{< meta pa_title >}}"
pa_num: 8
pa_title: "More Plots"
---

```{r}
#| echo: false
#| warning: false
#| message: false
library(tidyverse)
NUMBER <- as.integer(rmarkdown::metadata$pa_num)
due_date_str <- read_csv("key_dates.csv") |> 
    filter(`Course Element` == "Pre-Assignments", 
           `Item Number` == NUMBER, 
           str_detect(Details, "Due")) |> 
    mutate(dt = parse_date_time(paste(Date, Time), "%Y-%m-%d %H:%M%p")) |>
    pull(dt) |>
    format("%Y-%m-%d (%A) at %I:%M%P")
```

**Due Date**: `{r} due_date_str`

**Submission**: [CUNY Brightspace](https://brightspace.cuny.edu/)


This week, we will dive deeper into the world of data visualization, with a focus on tools for interactive (and
animated) data visualization. Before doing so, let's 
pause and consolidate everything we've done to date: 

1. If you did not finish [last week's in-class
   lab](../labs/lab07.html), do so now.

2. Explore the [R Graphics Gallery "Best Charts"
   collection.](https://r-graph-gallery.com/best-r-chart-examples)
   Pick one chart from this collection and evaluate it with a critical
   eye:
   
   i) Is it well styled?
   ii) What story is it trying to tell?
   iii) Does it tell that story effectively?
   iv) Do you believe that story? 
   v) How could it tell the story more effectively?
   
::: {.callout-tip title="Optional Enrichment: Myth Busting and Apophenia in Data Visualization" collapse="true"}

Watch [Prof. Di Cook](https://www.dicook.org/)'s lecture "Myth busting
and apophenia in data visualisation: is what you see really there?". As
we discussed in class, plots are an excellent way to explore data, but we
always want to be careful that what we think find truly exists. Prof.
Cook discusses relationships between effective statistical visualization
and effective statistical practice.

{{<video https://www.youtube.com/watch?v=coGeZIHCk38 >}}

:::

Ok - we're now ready to move forward. This week, we will explore various
technologies for interactive data visualization. These can be divided into
two broad categories: 

- Server Based: When the user makes a change to a plot, it is sent to a 
  server where the new plot is rendered and returned to the user. 
- Browser Based: When the user makes a change to a plot, the new plot is 
  created _in the browser_ and re-rendered 'on site'. 
  
Generally, server-based approaches are more flexible (and a bit easier to 
implement) while browser-based approaches are more responsive and scalable.
Since the browser work is done locally on the user's computer (or phone or 
tablet), they are also cheaper and safer to run as there's no need to have
a server constantly responding to user input. 

This week, we will explore _a bit_ of each modality, though entire courses
(and indeed entire careers) have been spent on both. 

In the `R` ecosystem, the tool of choice for building server-based[^slive] web
applications is `shiny`.[^py] For this pre-assignment, you will work through 
Lessons 1 and 2 of the ["Shiny 
Basics"](https://shiny.posit.co/r/getstarted/shiny-basics/lesson1/) 
web tutorial. (You do not need to do the "Next Steps" in Lesson 3, but you are
of course welcome to.)

[^slive]: There is an effort to run `shiny` fully in browser (avoiding the need
for a web server). It is still a work-in-progress, but you can try it out on
the [`r-shinylive`](https://posit-dev.github.io/r-shinylive/) website, with
a full gallery of examples [here](https://shinylive.io/r/examples/). 

[^py]: If you are more of a Python person, you can also check out the Python
versions of [`shiny`](https://shiny.posit.co/py/) and
[`shinylive`](https://shiny.posit.co/py/docs/shinylive.html).

After finishing these activities, complete the Weekly Pre-Assignment Quiz on
Brightspace.
