---
title: "{{< var course.short >}} - Course Syllabus"
filters: 
 - list-table
---

**`All syllabus and course schedule provisions subject to change with suitable advance notice.`**

### Instructor

-   [Professor Michael Weylandt](https://michael-weylandt.com)
-   Department of Information Systems & Statistics
-   Zicklin School of Business
-   Baruch College, CUNY

### Course Meetings

#### Lecture / Lab Sessions

-   Virtual (Synchronous Online)
-   Tuesdays / Thursdays 6:05pm-9:00pm
    -   Zoom link provided via Brightspace

#### Office Hours

-   In-Person
    -   [Baruch Main Campus (1 Bernard Baruch Way)](https://www.baruch.cuny.edu/campus-map-and-directions/)
    -   Newman Vertical Campus (NVC) 11-246
    -   By appointment only
-   Virtual:
    -   Tuesdays and Thursdays 4:30pm-5:30pm
    -   Zoom link provided via Brightspace

### Grading

-   24% [Weekly Pre-Assignments](./preassignments.html)
    -   3% Each (best eight of ten: lowest two dropped)
    -   Submission *via* Brightspace
-   36% [Mini Projects](./miniprojects.html)
    -   7% Each (four total)
    -   2% per Peer Feedback (Meta-Review)
-   40% [Course Project](./project.html)
    -   5% Proposal
    -   5% Mid-term Check-In
    -   10% Final Presentation
    -   7.5% Final Report
    -   12.5% Individual Evaluation

*Opportunities for Extra Credit:* Several opportunities for extra credit
will be made available. These include:

1. Participation in Course Discussion Board (Piazza)
2. Correction of errors in published course materials (*via* Github pull request)
3. Contributions to and enhancements of the course pre-assignments and in-class
   activities. These should be submitted as a Github pull request against
   [the Course Repository](https://github.com/michaelweylandt/STA9750). 
   
   Note that contributions to course materials don't have to be large to be
   valuable. You can simply clarify points that were not obvious to you, 
   add new auto-graded exercises (see existing materials for examples), create 
   new labs, or even add whole new topics. 
   
   You can take part in this extra credit even if you are very new to `R`: if
   anything, being a recent learner helps you approach this topic with new eyes
   and to identify un-clear or "dangerous" edges. 
   
   Obviously, you should try to make your contributions as accurate as possible, 
   but let yourself be paralyzed by concern: the instructor will review any 
   contributions before making anything "official."

<!-- 
4. Submission of homework from other Baruch {{< var course.semester >}} courses
   completed using `R`. (Note that the assignment must not ordinarily require
   `R`: this is *extra* credit.) 

   Submission of work from other courses must include: 

   1) the syllabus from the other course; 
   2) the original assignment text and other relevant materials; 
   3) the _graded_ returned submission. 
    
   Work submitted for extra credit must be submitted no later than the final
   day of class. Students may submit no more than 2 assignments for extra credit
   per semester, so think carefully about which assignments you wish to submit.

-->

Final course grades will be curved in accordance with relevant program,
departmental, school, and college policies.[^1]

[^1]: Theoretically, this may result in scores equivalent to an `A` in an
un-curved course receiving a lower grade in this course. In practice, the
instructor will design course assessments to induce a range of scores and
does not anticipate "down-curving" happening.

#### Regrading Policy

If you feel an assignment has been improperly graded, please contact the
instructor by private message on the course discussion board within 48 hours
of the graded assignment being returned. Note that the instructor will regrade
the assignment *de novo*, so your grade may be adjusted upwards or downwards.

#### Late Work Policy

This course has *many* moving pieces and late work will not
be accepted. Specifically, late submission slows down the
peer review cycle used in this course. All assignments can
be submitted multiple times on Brightspace, so you are
**strongly** encouraged to submit early and to submit often.
Students are also encouraged to load the course deadlines
file ([Tuesday section](./key_dates_students_gcal_tuesday.csv), [Thursday
section](./key_dates_students_gcal_thursday.csv)) into their personal
calendar to better track key course dates.

Please note that work **must be submitted on Brightspace** unless *specifically*
otherwise stated in the written course description or approved *in writing*
by the instructor at least 48 hours before the deadline. Email submissions are
not allowed.[^email]

[^email]: Though ubiquitous, email is a remarkably 'flaky' service, providing
the sender no way to guarantee their message arrives untampered and providing
the recipient no way to guarantee the providence of a message received.
(This is not quite true: there are [tools for more secure 
email](https://gnupg.org) but they are somewhat more difficult to use and
are not supported at CUNY.)
Brightspace is integrated with CUNY's Identity Verification Services and
allows students to guarantee correct submission. Note that Brightspace does
not, by default, send students an email confirming submission, but I believe
this is an option that can be enabled on the student's end. 

Technology issues are not an approved excuse for late submissions; in
particular, Brightspace issues are not an approved excuse for late submission
of the [Mini-Projects](./miniprojects.html). Brightspace support is provided by
[BCTC](https://bctc.baruch.cuny.edu/students/) and the [BCTC Help
Desk](https://bctc.baruch.cuny.edu/instructional-technology/services/service-now/). 
The Help Desk is not staffed 24 hours per day, so you are encouraged to submit
early and submit often to avoid issues. The course staff is able to provide 
additional support for personal computer issues, including `git` and `RStudio`
during regularly-scheduled Office Hours, but BCTC should be your first point
of contact.

Individual exceptions to the above policies will be made i) with *prior written*
approval of instructor *at least 48 hours* before the deadline; or ii) *ex post*
with written note from the [Office of the Dean of
Students](https://studentaffairs.baruch.cuny.edu/dean-of-students/). Please note
that, in particular: 

- The instructor is not able to provide *ex post* exceptions; these must be
  handled through [DoS's Notice of Absence
  procedures](https://studentaffairs.baruch.cuny.edu/dean-of-students/notice-of-absence/). 
- Verbal exceptions discussed in Office Hours or after class are not sufficient.
  You must follow-up on any discussions and get my written pre-approval by
  email or on the course discussion board. 

### Tentative Course Schedule

```{r}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
class_date <- function(n){
    read_csv(date_file) |>
        filter(`Course Element` == "Class Session") |>
        filter(`Item Number` == n) |>
        pull(Date) |>
        format("%Y-%m-%d")
}
```

```{r}
#| echo: false
#| message: false
library(tidyverse)
holiday_date <- function(n, details=FALSE){
    h <- read_csv(date_file) |>
            filter(`Course Element` == "No Class") |>
            filter(`Item Number` == n)
    
    if(details){
        h |> pull(Details)
    } else {
        h |> pull(Date) |> format("%Y-%m-%d")
    }
}
```


```{r}
#| echo: false
#| message: false
library(tidyverse)
due_date_mini <- function(n, submission=TRUE, feedback=!submission){
    details <- if(feedback) "Mini-Project Peer Feedback Due" else "Mini-Project Due"
    
    read_csv(date_file) |>
        filter(`Course Element` == "Mini-Projects",
               `Details` == details) |>
        filter(`Item Number` == n) |>
        mutate(deadline = paste(format(Date, "%A %B %d, %Y"), "at", Time)) |>
        pull(deadline)
}
```




::: {.panel-tabset}

## Tuesday Section

```{r}
#| echo: false
date_file <- "key_dates_tuesday.csv"
```

::: {.list-table width="1,1,1,1,1,1,1" aligns="c,c,l,l,l,l,l" header-rows=1 .hover}

   * - Week 
     - Lecture Date
     - Topics
     - Pre-Assignment
     - In-Class Lab
     - Mini-Projects
     - Additional Notes
     
   * - 1
     - `r class_date (01)`
     - Course Overview and Key Infrastructure:
       1. `R` and `RStudio`
       2. `git` and GitHub
     - None
     - [Lab #01](./labs/lab01.html)
     - [Mini-Project #00](./miniprojects/mini00.html) assigned. 
       Due `r due_date_mini(0)`
       
   * - 2
     - `r class_date (02)`
     - 1. Introduction to Reproducible Research:
          - Markdown and Quarto
          - GitHub Pages
       2. Getting Help
       3. Interactive Use of `R`
          a. Use of the REPL
          b. Installing and Loading Packages
     - [PA #02](./preassigns/pa02.html)
     - [Lab #02](./labs/lab02.html)

   * - 3
     - `r class_date (03)`
     - Basic Data and Control Structures in `R`:
       1. Vectors
       2. Subsetting
       3. Control Flow
       4. Function Calls
       5. Data Frames
       
       Introduction to Course Project
     - [PA #03](./preassigns/pa03.html)
     - [Lab #03](./labs/lab03.html)
     - [Mini-Project #01](./miniprojects/mini01.html) assigned. 
       Due `r due_date_mini(1)`
     - Peer Feedback on Mini Project #00 due 
       `r due_date_mini(0, feedback=TRUE)`

   * - 4
     - `r class_date (04)`
     - Tidy Data Manipulation I:
       1. Single Table Operations
       2. Factors
       3. Dates & Times
       
       Review of `git` fundamentals.
     - [PA #04](./preassigns/pa04.html)
     - [Lab #04](./labs/lab04.html)

   * - 
     - `r holiday_date(1)`
     <td colspan="5" style="text-align:center"> ***`r holiday_date(1, details=TRUE)`*** </td>

   * - 5
     - `r class_date (05)`
     - Tidy Data Manipulation II:
       1. Multi-Table Operations (Joins)
       2. Pivots
       3. Working with Missing Data
       
       Debugging Techniques
     - [PA #05](./preassigns/pa05.html)
     - [Lab #05](./labs/lab05.html)
     - [Mini-Project #02](./miniprojects/mini02.html) assigned. 
       Due `r due_date_mini(2)`
     - Peer Feedback on Mini Project #01 due 
       `r due_date_mini(1, feedback=TRUE)`

   * - 6
     - `r class_date (06)`
     <td colspan="5" style="text-align:center"> **In-Class Project Proposal Presentations** <br> *Optional Enrichment Topic: SQL* </td>

   * - 
     - `r holiday_date(2)`
     <td colspan="5" style="text-align:center"> ***`r holiday_date(2, details=TRUE)`*** </td>

   * - 7
     - `r class_date (07)`
     - Plotting I:
       - Introduction to `ggplot2`
       - Customizing Formatting
       - Maps
     - [PA #07](./preassigns/pa07.html)
     - [Lab #07](./labs/lab07.html)

   * - 8
     - `r class_date (08)`
     - Tools for Interactive Data Analysis
       - `shiny`
       - `ggplot2` Extensions for Animated and Interactive Plots
     - [PA #08](./preassigns/pa08.html)
     - [Lab #08](./labs/lab08.html)
     - [Mini-Project #03](./miniprojects/mini03.html) assigned. 
       Due `r due_date_mini(3)`
     - Peer Feedback on Mini Project #02 due 
       `r due_date_mini(2, feedback=TRUE)`
     
   * - 9
     - `r class_date (09)`
     - Data Import
     - [PA #09](./preassigns/pa09.html)
     - [Lab #09](./labs/lab09.html)
     
   * - 10
     - `r class_date (10)`
     <td colspan="5" style="text-align:center"> **Mid-Semester Check-In Presentations** <br> *Optional Enrichment Topic: Functional Programming Tools* </td>

   * - 11
     - `r class_date (11)`
     - Elements of Web Scraping
       - Introduction to HTTP and HTML
       - `httr2`
       - `rvest`
       - JSON
     - [PA #11](./preassigns/pa11.html)
     - [Lab #11](./labs/lab11.html)
     - [Mini-Project #04](./miniprojects/mini04.html) assigned. 
       Due `r due_date_mini(4)`
     - Peer Feedback on Mini Project #03 due 
       `r due_date_mini(3, feedback=TRUE)`

   * - 12
     - `r class_date (12)`
     - 
       - Strings & Regular Expressions
       - Classical Statistical Modeling in `R`
     - [PA #12](./preassigns/pa12.html)
     - [Lab #12](./labs/lab12.html)
    
   * - 13
     - `r class_date (13)`
     - Predictive Modeling in `R`
     - [PA #13](./preassigns/pa13.html)
     - [Lab #13](./labs/lab13.html)
     - 
     - Peer Feedback on Mini Project #04 due 
       `r due_date_mini(4, feedback=TRUE)`

   * - 14
     - `r class_date(14)`
     <td colspan="5" style="text-align:center"> **Final Presentations** <br> **Course Wrap-Up** </td>
::: 


## Thursday Section

```{r}
#| echo: false
date_file <- "key_dates_thursday.csv"
```

::: {.list-table width="1,1,1,1,1,1,1" aligns="c,c,l,l,l,l,l" header-rows=1 .hover}

   * - Week 
     - Lecture Date
     - Topics
     - Pre-Assignment
     - In-Class Lab
     - Mini-Projects
     - Additional Notes
     
   * - 1
     - `r class_date (01)`
     - Course Overview and Key Infrastructure:
       1. `R` and `RStudio`
       2. `git` and GitHub
     - None
     - [Lab #01](./labs/lab01.html)
     - [Mini-Project #00](./miniprojects/mini00.html) assigned. 
       Due `r due_date_mini(0)`
       
   * - 2
     - `r class_date (02)`
     - 1. Introduction to Reproducible Research:
          - Markdown and Quarto
          - GitHub Pages
       2. Getting Help
       3. Interactive Use of `R`
          a. Use of the REPL
          b. Installing and Loading Packages
     - [PA #02](./preassigns/pa02.html)
     - [Lab #02](./labs/lab02.html)

   * - 3
     - `r class_date (03)`
     - Basic Data and Control Structures in `R`:
       1. Vectors
       2. Subsetting
       3. Control Flow
       4. Function Calls
       5. Data Frames
       
       Introduction to Course Project
     - [PA #03](./preassigns/pa03.html)
     - [Lab #03](./labs/lab03.html)
     - [Mini-Project #01](./miniprojects/mini01.html) assigned. 
       Due `r due_date_mini(1)`
     - Peer Feedback on Mini Project #00 due 
       `r due_date_mini(0, feedback=TRUE)`

   * - 4
     - `r class_date (04)`
     - Tidy Data Manipulation I:
       1. Single Table Operations
       2. Factors
       3. Dates & Times
       
       Review of `git` fundamentals.
     - [PA #04](./preassigns/pa04.html)
     - [Lab #04](./labs/lab04.html)

   * - 5
     - `r class_date (05)`
     - Tidy Data Manipulation II:
       1. Multi-Table Operations (Joins)
       2. Pivots
       3. Working with Missing Data
       
       Debugging Techniques
     - [PA #05](./preassigns/pa05.html)
     - [Lab #05](./labs/lab05.html)
     - [Mini-Project #02](./miniprojects/mini02.html) assigned. 
       Due `r due_date_mini(2)`
     - Peer Feedback on Mini Project #01 due 
       `r due_date_mini(1, feedback=TRUE)`

   * - 
     - `r holiday_date(1)`
     <td colspan="5" style="text-align:center"> ***`r holiday_date(1, details=TRUE)`*** </td>

   * - 6
     - `r class_date (06)`
     <td colspan="5" style="text-align:center"> **In-Class Project Proposal Presentations** <br> *Optional Enrichment Topic: SQL* </td>

   * - 7
     - `r class_date (07)`
     - Plotting I:
       - Introduction to `ggplot2`
       - Customizing Formatting
       - Maps
     - [PA #07](./preassigns/pa07.html)
     - [Lab #07](./labs/lab07.html)

   * - 8
     - `r class_date (08)`
     - Tools for Interactive Data Analysis
       - `shiny`
       - `ggplot2` Extensions for Animated and Interactive Plots
     - [PA #08](./preassigns/pa08.html)
     - [Lab #08](./labs/lab08.html)
     - [Mini-Project #03](./miniprojects/mini03.html) assigned. 
       Due `r due_date_mini(3)`
     - Peer Feedback on Mini Project #02 due 
       `r due_date_mini(2, feedback=TRUE)`
     
   * - 9
     - `r class_date (09)`
     - Data Import
     - [PA #09](./preassigns/pa09.html)
     - [Lab #09](./labs/lab09.html)
     
   * - 10
     - `r class_date (10)`
     <td colspan="5" style="text-align:center"> **Mid-Semester Check-In Presentations** <br> *Optional Enrichment Topic: Functional Programming Tools* </td>

   * - 11
     - `r class_date (11)`
     - Elements of Web Scraping
       - Introduction to HTTP and HTML
       - `httr2`
       - `rvest`
       - JSON
     - [PA #11](./preassigns/pa11.html)
     - [Lab #11](./labs/lab11.html)
     - [Mini-Project #04](./miniprojects/mini04.html) assigned. 
       Due `r due_date_mini(4)`
     - Peer Feedback on Mini Project #03 due 
       `r due_date_mini(3, feedback=TRUE)`

   * - 12
     - `r class_date (12)`
     - 
       - Strings & Regular Expressions
       - Classical Statistical Modeling in `R`
     - [PA #12](./preassigns/pa12.html)
     - [Lab #12](./labs/lab12.html)

   * - 
     - `r holiday_date(2)`
     <td colspan="5" style="text-align:center"> ***`r holiday_date(2, details=TRUE)`*** </td>

   * - 13
     - `r class_date (13)`
     - Predictive Modeling in `R`
     - [PA #13](./preassigns/pa13.html)
     - [Lab #13](./labs/lab13.html)
     - 
     - Peer Feedback on Mini Project #04 due 
       `r due_date_mini(4, feedback=TRUE)`

   * - 14
     - `r class_date(14)`
     <td colspan="5" style="text-align:center"> **Final Presentations** <br> **Course Wrap-Up** </td>
::: 

:::


### Workload Expectations

The following _approximate_ breakdown of expected course workload is
intended to help you properly prepare for and schedule the out-of-class
work associated with this course. Note that, persuant to relevant
[Federal](https://www.ecfr.gov/current/title-34/part-600#p-600.2(Credit%20hour))
and [State](https://govt.westlaw.com/nycrr/Document/Ieca5c8abc22111dd97adcd755bda2840)
regulations, a 3-credit course taken over a 15 week semester should
require approximately 6 hours of out-of-class work from an _average_ 
student, or 90 hours total over the course of the semester.[^avg][^gc] This
time should be roughly allocated as: 

- Weekly Pre-Assignments (10 hours)
- Review of Previous Week's Materials (10 hours)
- Mini-Projects: (35 hours total)
  - Mini-Project #00 (3 hours):
    - Initial Submission (2 hours)
    - Peer Feedback (1 hour)
  - Mini-Projects #01-#04 (32 hours total; average 8 hours per mini-project)
    - Initial Submission (28 hours total)
      - 9 hours each for Mini-Projects [#01](./miniprojects/mini01.html) and [#02](./miniprojects/mini02.html); and
      - 5 hours each for Mini-Projects [#03](./miniprojects/mini03.html) and
      [#04](./miniprojects/mini04.html)
    - Peer Feedback (4 hours total; 1 hour per mini-project)
- Course Project (35 hours)
  - Proposal Presentation (3 hours)
  - Check-In Presentation (3 hours)
  - Final Presentation (5 hours)
  - Individual Report (20 hours)
  - Group Report (4 hours)
  
Note that, for the course project, the individual and group reports will
require work throughout the semester, not simply at the end, though the majority
of the effort is likely required in the latter half of the semester. As such,
the first two Mini-Projects are designed to take more effort than the final two.

[^avg]: For this course, an _average_ student is a student who enters the
course with: 

    i) Basic computer literacy, including use of the file system, plain text
       files and editors, *etc.*; 
    ii)  A small amount of programming experience, not necessarily in `R`; and
    iii) Fluency with statistics and data analysis at the level of (at least) 
         STA 9708, ideally STA 9700; 

    <br>and is earning a B-range grade. If you have less background or are 
    aiming for a higher grade, you should expect to commit proportionally
    more time to this course. 
    
    If you lack the prerequisite background listed above or
    simply wish to review it before the semester begins in
    earnest, please reach out to the instructor and I will be
    more than happy to provide supplementary readings. 

[^gc]: The CUNY Graduate Center has a useful [summary of these
expectations](https://gc.catalog.cuny.edu/general-information/credithourpolicy).
Baruch courses follow the same standards. See also [CUNY Central
Policy](https://www.cuny.edu/wp-content/uploads/sites/4/page-assets/about/administration/offices/registrar/resources/State-and-Federal-Credit-Hour-Definitions-08022019-2-1.pdf).

**`All syllabus and course schedule provisions subject to change with suitable advance notice.`**
