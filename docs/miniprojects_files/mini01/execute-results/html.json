{
  "hash": "6084b1eccef250746a5f01168754bd24",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"{{< var course.short >}} Mini-Project #{{< meta mp_num >}}: {{< meta mp_title >}}\"\nformat:\n  html:\n    code-link: true\nmp_num: \"01\"\nmp_title: \"Welcome to the Commission to Analyze Taxpayer Spending (CATS)\"\nengine: knitr\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n### Due Dates\n\n-   Released to Students: 2025\\-02\\-13\n-   **Initial Submission: 2025\\-03\\-05 11:45pm ET on GitHub and Brightspace**\n-   **Peer Feedback:**\n    -   Peer Feedback Assigned: 2025\\-03\\-06 on GitHub\n    -   **Peer Feedback Due: 2025\\-03\\-12 11:45pm ET on GitHub**\n    \n\n*Estimated Time to Complete: 9 Hours*\n\n*Estimated Time for Peer Feedback: 1 Hour*\n\n## Welcome to {{< var course.short >}} Mini Projects!\n\nIn the {{< var course.short >}} Mini-Projects, you will perform basic data\nanalyses intended to model best practices for your course final project.\n(Note, however, that these are *mini*-projects; your final course project is\nexpected to be far more extensive than any single MP.)\n\nFor purposes of MPs, we are dividing the basic data analytic workflow into\nseveral major stages:\n\n-  Data Ingest and Cleaning: Given a single data source, read it into `R` and\n   transform it to a reasonably useful standardized format.\n-  Data Combination and Alignment: Combine multiple data sources to enable\n   insights not possible from a single source.\n-  Descriptive Statistical Analysis: Take a data table and compute informative\n   summary statistics from both the entire population and relevant subgroups\n-  Data Visualization: Generate insightful data visualizations to spur insights\n   not attainable from point statistics\n-  Inferential Statistical Analysis and Modeling: Develop relevant predictive\n   models and statistical analyses to generate insights about the *underlying\n   population* and not simply the data at hand.\n\nIn this course, our primary focus is on the first four stages: you will take\nother courses that develop analytical and modeling techniques for a variety of\ndata types. As we progress through the course, you will eventually be\nresponsible for the first four steps. Specifically, you are responsible for the\nfollowing stages of each mini-project:\n\n+----------------------+---------------------+---------------------------+----------------------------------+---------------+\n|                      | Ingest and Cleaning | Combination and Alignment | Descriptive Statistical Analysis | Visualization |\n+:====================:+:===================:+:=========================:+:================================:+:=============:+\n| **Mini-Project #01** |                     |                           | **✓**                            |               |\n+----------------------+---------------------+---------------------------+----------------------------------+---------------+\n| **Mini-Project #02** |                     | **✓**                     | **✓**                            | **½**         |\n+----------------------+---------------------+---------------------------+----------------------------------+---------------+\n| **Mini-Project #03** | **½**               | **✓**                     | **✓**                            | **✓**         |\n+----------------------+---------------------+---------------------------+----------------------------------+---------------+\n| **Mini-Project #04** | **✓**               | **✓**                     | **✓**                            | **✓**         |\n+----------------------+---------------------+---------------------------+----------------------------------+---------------+\n\n: Students' Responsibilities in Mini-Project Analyses {.hover}\n\nIn early stages of the course, such as this MP, I will 'scaffold' much of the\nanalysis for you, leaving only those stages we have discussed in class for you\nto fill in. As the course progresses, the mini-projects will be more\nself-directed and results less standardized.\n\n### Rubric\n\n{{< var course.short >}} Mini-Projects are evaluated using *peer grading* with *meta-review* by the course GTAs. Specifically, variants of the following rubric\nwill be used for the mini-projects:\n\nn| Course Element        | Excellent (9-10)                                                                                                                                                                            | Great (7-8)                                                                                                                                                     | Good (5-6)                                                                                            | Adequate (3-4)                                                                               | Needs Improvement (1-2)                                                                             | Extra Credit                                                                                                                    |\nn| Written Communication | Report is well-written and flows naturally. Motivation for key steps is clearly explained to reader without excessive detail. Key findings are highlighted and appropriately given context. | Report has no grammatical or writing issues. Writing is accessible and flows naturally. Key findings are highlighted, but lack suitable motivation and context. | Report has no grammatical or writing issues. Key findings are present but insufficiently highlighted. | Writing is intelligible, but has some grammatical errors. Key findings are obscured.         | Report exhibits significant weakness in written communication. Key points are difficult to discern. | Report includes extra context beyond instructor provided information.                                                           |\nn| Project Skeleton      | Code completes all instructor-provided tasks correctly                                                                                                                                      | Response to one instructor provided task is skipped, incorrect, or otherwise incomplete.                                                                        | Responses to two instructor provided tasks are skipped, incorrect, or otherwise incomplete.           | Response to three instructor provided tasks are skipped, incorrect, or otherwise incomplete. | Less than half of the instructor-provided tasks were successfully completed.                        | Report exhibits particularly creative insights beyond instructor specifications.                                                |\nn| Formatting & Display  | Tables have well-formatted column names, suitable numbers of digits, and attractive presentation. Table has a suitable caption.                                                             | Column names and digits are well-chosen, but formatting could be improved.                                                                                      | Bad column names (opaque variable names or other undefined acronyms)                                  | Unfiltered 'data dump' instead of curated table.                                             | No tables.                                                                                          | Report includes one or more high-quality graphics (created using `R`).                                                          |\nn| Code Quality          | Code is (near) flawless.                                                                                                                                                                    | Comments give context of the analysis, not simply defining functions used in a particular line.                                                                 | Code has well-chosen variable names and basic comments.                                               | Code executes properly, but is difficult to read.                                            | Code fails to execute properly.                                                                     | Code takes advantage of advanced `Quarto` features to improve presentation of results.                                          |\n|                       |                                                                                                                                                                                             |                                                                                                                                                                 |                                                                                                       |                                                                                              |                                                                                                     |                                                                                                                                 |\n|                       | Code passes all `styler` and `lintr` type analyses without issue.                                                                                                                           |                                                                                                                                                                 |                                                                                                       |                                                                                              |                                                                                                     |                                                                                                                                 |\nn| Data Preparation      | Automatic (10/10). Out of scope for this mini-project                                                                                                                                       |                                                                                                                                                                 |                                                                                                       |                                                                                              |                                                                                                     | Report modifies instructor-provided import code to use additional columns or data sources in a way that creates novel insights. |\nn\n: Mini-Project Grading Rubric\n\nNote that this rubric is designed with copious opportunities for extra credit if\nstudents go *above and beyond* the instructor-provided scaffolding. Students\npursuing careers in data analytics are strongly encouraged to go beyond the strict\nambit of the mini-projects to i) further refine their skills; ii) learn additional\ntechniques that can be used in the final course project; and iii) develop a more\nimpressive professional portfolio.\n\nBecause students are encouraged to use {{< var course.short >}} mini-projects as\nthe basis for a professional portfolio, the basic skeleton of each project will be\nreleased under a fairly permissive usage license. Take advantage of it!\n\n### Submission Instructions\n\nAfter completing the analysis, write up your findings, *showing all of\nyour code*, using a dynamic `quarto` document and post it to your course\nrepository. The `qmd` file should be named `mp01.qmd` so the\nrendered document can be found at `docs/mp01.html` in the student's\nrepository and served at the URL:[^sub]\n\n> `https://<GITHUB_ID>.github.io/{{< var course.repo >}}/mp{{< meta mp_num >}}.html`\n\nOnce you confirm this website works (substituting `<GITHUB_ID>` for the actual GitHub username provided to the professor in [MP#00](./mini00.html) of course), open a new issue at\n\n> `https://github.com/michaelweylandt/{{< var course.repo >}}/issues/new` .\n\nTitle the issue `{{< var course.short >}} <GITHUB_ID> MiniProject #{{< meta mp_num >}}` and fill in the following text for the issue:\n\n::: {#submission-text}\n\n```         \nHi @michaelweylandt!\n\nI've uploaded my work for MiniProject #**{{< meta mp_num >}}** - check it out!\n\nhttps://<GITHUB_ID>.github.io/{{< var course.repo >}}/mp{{< meta mp_num >}}.html\n```\n\n:::\n\nOnce the submission deadline passes, the instructor will tag classmates for peer feedback in this issue thread.\n\n*Additionally*, a PDF export of this report should be submitted on Brightspace. To create a PDF from the uploaded report, simply use your browser's 'Print to PDF' functionality.\n\n**NB**: The analysis outline below specifies key *tasks* you need to perform within your write up. Your peer evaluators will check that you complete these. You are encouraged to do extra analysis, but the bolded **Tasks** are *mandatory*.\n\n**NB**: Your final submission should look like a *report*, not simply a list of\nfacts answering questions. Add introductions, conclusions, and your own commentary.\nYou should be practicing both raw *coding* skills and written *communication* in\nall mini-projects. There is little value in data points stated without context or\nmotivation.\n\n[^sub]: Throughout this section, replace `<GITHUB_ID>` with your GitHub ID from\n[Mini-Project #00](./mini00.html), making sure to remove the angle brackets. Note\nthat the automated course infrastructure will be looking for precise formatting,\nso follow these instructions closely. \n\n## Mini-Project #{{< meta mp_num >}}: {{< meta mp_title >}}\n\nCongratulations! You have just been appointed as a senior technical\nanalyst working with New York City's new *Commission to Analyze Taxpayer\nSpending* (CATS). As a technical analyst, you are tasked with helping the\nCommissioners understand New York City's expenses and identifying\nopportunities to spend taxyper monies more effectively. Specifically,\nthe Commission chair, Mr. Keno Slum, has asked you to analyze the City\npayroll and to identify instances in which senior agency officials make\nsignificantly more than rank-and-file city employees. \n\nIn this mini-project, you will analyze City payroll data and write a \nreport highlighting possible savings to be submitted to the CATS\nCommissioners. In this mini-project, you will: \n\n1) Begin to work with [NYC Open Data](https://opendata.cityofnewyork.us/)\n2) Practice Use of `dplyr` for analysis of tabular data\n3) Practice Use of `quarto` and Reproducible Research Tools for Effective\n   Communication of Data Analysis Results\n\n::: {.callout-warning title=\"Writing Requirements\"}\n\nRecall that you are *evaluated* on writing and communication in these \nMini-Projects. You are required write a report in the prescribed style, here\nan internal policy briefing 'white paper'. A submission that performs the \ninstructor-specified tasks, but does not write and give appropriate context\nand commentary will score very poorly on the relevant rubric elements. \n\nIn particular, if a submission is not in \"white paper\" style, peer evaluators\nshould judge it to have \"Good\" quality Written Communication (at best) as key\nfindings are not conveyed appropriately. \n\nQuarto's [cold folding](https://quarto.org/docs/output-formats/html-code.html#folding-code) \nfunctionality is useful for \"hiding\" code so that it doesn't break the flow of\nyour writing. \n\nYou can also make use of [Quarto's `contents`\nshortcode](https://quarto.org/docs/authoring/contents.html) to present\ncode and findings in an order other than how the code should be executed.\nThis is particularly useful if you want to include a figure or table in an \n\"Executive Summary\" at the top of your submission.\n\n:::\n\n### Acquiring Payroll Data\n\nThe following code will download the city payroll data and create a file\n`nyc_payroll_export.csv` in a `data/mp01` directory. If this doesn't work\nfor whatever reason, you can download the data directly from [NYC\nOpenData](https://data.cityofnewyork.us/City-Government/Citywide-Payroll-Data-Fiscal-Year-/k397-673e/about_data), though you will need to make sure it is in a suitable\nlocation and format for use in this mini-project.[^exportspeed] \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!file.exists(\"data/mp01/nyc_payroll_export.csv\")){\n    dir.create(\"data/mp01\", showWarnings=FALSE, recursive=TRUE)\n    \n    ENDPOINT <- \"https://data.cityofnewyork.us/resource/k397-673e.json\"\n    \n    if(!require(\"httr2\")) install.packages(\"httr2\")\n    library(httr2)\n    \n    if(!require(\"jsonlite\")) install.packages(\"jsonlite\")\n    library(jsonlite)\n    \n    if(!require(\"dplyr\")) install.packages(\"dplyr\")\n    library(dplyr)\n    \n    if(!require(\"readr\")) install.packages(\"readr\")\n    library(readr)\n    \n    BATCH_SIZE <- 50000\n    OFFSET     <- 0\n    END_OF_EXPORT <- FALSE\n    ALL_DATA <- list()\n    \n    while(!END_OF_EXPORT){\n        cat(\"Requesting items\", OFFSET, \"to\", BATCH_SIZE + OFFSET, \"\\n\")\n        \n        req <- request(ENDPOINT) |>\n                  req_url_query(`$limit`  = BATCH_SIZE, \n                                `$offset` = OFFSET)\n        \n        resp <- req_perform(req)\n        \n        batch_data <- fromJSON(resp_body_string(resp))\n        \n        ALL_DATA <- c(ALL_DATA, list(batch_data))\n        \n        if(NROW(batch_data) != BATCH_SIZE){\n            END_OF_EXPORT <- TRUE\n            \n            cat(\"End of Data Export Reached\\n\")\n        } else {\n            OFFSET <- OFFSET + BATCH_SIZE\n        }\n    }\n    \n    ALL_DATA <- bind_rows(ALL_DATA)\n    \n    cat(\"Data export complete:\", NROW(ALL_DATA), \"rows and\", NCOL(ALL_DATA), \"columns.\")\n    \n    write_csv(ALL_DATA, \"data/mp01/nyc_payroll_export.csv\")\n}\n```\n:::\n\n\n\nYou do not (yet) need to understand the code above, so please use the course\ndiscussion board if you have trouble getting it working. \n\n::: {.callout-tip title=\"Task 1: Data Acquisition\"}\n\nUsing the code above, acquire the latest NYC Payroll Data. \n\n:::\n\n::: {.callout-caution title=\"Do Not `git add` Data Files\"}\n\nMake sure that `git` is set to ignore data files, such as the one created above.\nCheck the `git` pane in `RStudio` and make sure that `nyc_payroll_export.csv`\ndoes not appear. (If you set up your `.gitignore` file correctly in\n[MP#00](./mini00.html), it should already be ignored.) If it is appearing, you\nmay need to edit your `.gitignore` file.\n\nRemoving a large data file from `git` is possible, but difficult. Don't get\ninto a bad state!\n\n:::\n\n\n[^exportspeed]: For some reason, this data takes up to seven or eight minutes to\ndownload from the city website, even though it's really not that complicated or\nmassive. Don't fret. \n\n### Importing Data into `R` and Preparing for Analysis\n\nBefore we can analyze this data, we need to get it into `R` and in a suitable\nformat. The `read_csv` function from the `readr` package can be used to read\n`csv` files into `R` (imagine that!). The above download code will handle most\nof the irregularities in the city data,[^prep] so we only need to make a few\nchanges before beginning our analysis. In particular, let's change some of the\nstring columns to more conventional punctuation. The `str_to_title` function\nfrom the `stringr` package isn't _perfect_ (name capitalization rules can be\nrather idiosyncratic), but it will get us pretty close. \n\n::: {.callout-tip title=\"Task 2: Data Import and Preparation\"}\n\nRead your data into `R` using the `read_csv` function from the `readr` package.\nBefore continuing, use a `mutate` command and the `str_to_title` function from\nthe `stringr` package to convert the following columns to more conventional\nformatting. \n\n- Agency Name\n- Last Name\n- First Name\n- Work Location (Borough)\n- Title / Job Description\n- Leave Status\n\n:::\n\nIt is good practice to always visually check your data to make sure it is properly\nformatting. You can use the `glimpse` function for a quick look here. We will use\nmore refined formatting below. \n\n### Initial Exploration\n\n#### Identifying Individual Records\n\nAny time you are analyzing a new data set, you should begin by making sure\nyou understand what the relevant columns are. In this case, we have basic\ndescriptions of each column from the [data\npage](https://data.cityofnewyork.us/City-Government/Citywide-Payroll-Data-Fiscal-Year-/k397-673e/about_data). We seem, however, to lack a few things you would\nnormally want in a data set like this: in particular, we don't have a unique\nID for employees (a \"primary key\" in database parlance). This will make it \nharder for us to track individuals across years or across agencies (if they\nhave two jobs at different agencies in the same fiscal year); we can approximate\na unique identifier with First+Middle+Last, but it won't be perfect. \n\nLet's begin by reviewing the career of the current mayor, **Eric L. Adams**. Use\na combination of `filter`, `rename`, `arrange` to create a table like the\nfollowing. (You may also need to use `group_by` and `summarize`.)\n\n| Fiscal Year | Position    | Agency                    | Total Salary |\n|-------------|-------------|---------------------------|--------------|\n| 2020        | Game Keeper | Parks and Recreation      | 15000        |\n| 2021        | Fish Sorter | Environmental Protection  | 25000        |\n| 2022        | Mayor       | Office of the Mayor       | 35000        |\n| 2023        | Hamburgler  | McDonald's on 23rd        | 20000        |\n\n(Obviously, these numbers and details are not correct.) Note that the Mayoral\nterm does not line up with the City's fiscal year, so you can choose how best\nto combine years in which Mr. Adams held more than one job. Once you have\ncreated the career table for Mr. Adams, you can use the `DT` package to create\nan attractive visualization of your results. \n\nFor example, \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DT)\nlibrary(scales)\n\ntbl_txt <- \"\nFiscal Year, Position, Agency, Total Salary\n2020,Game Keeper, Parks and Recreation, 15000\n2021, Fish Sorter, Environmental Protection, 25000\n2022, Mayor, Office of the Mayor, 35000\n2023, Hamburgler, McDonald's on 23rd,20000\"\n\nread_csv(tbl_txt) |> \n    mutate(`Total Salary` = dollar(`Total Salary`)) |>\n    datatable(options=list(searching=FALSE, \n                           paging=FALSE,\n                           info=FALSE))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-f576d6459ae9be9bbee4\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f576d6459ae9be9bbee4\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\"],[2020,2021,2022,2023],[\"Game Keeper\",\"Fish Sorter\",\"Mayor\",\"Hamburgler\"],[\"Parks and Recreation\",\"Environmental Protection\",\"Office of the Mayor\",\"McDonald's on 23rd\"],[\"$15,000\",\"$25,000\",\"$35,000\",\"$20,000\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>Fiscal Year<\\/th>\\n      <th>Position<\\/th>\\n      <th>Agency<\\/th>\\n      <th>Total Salary<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"searching\":false,\"paging\":false,\"info\":false,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":1},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"Fiscal Year\",\"targets\":1},{\"name\":\"Position\",\"targets\":2},{\"name\":\"Agency\",\"targets\":3},{\"name\":\"Total Salary\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\nThe [`DT` package](https://rstudio.github.io/DT/) wraps the \nJavascript [`datatables` library](https://datatables.net/) to\nto provide interactive tables. This library has _many_ options\nto control formatting. Later in this course, you will also \ncounter the [`gt` package](https://gt.rstudio.com/) to create\ncomplex tables natively in `R`.\n\n::: {.callout-tip title=\"Task 3: Create an Employee Salary Table\"}\n\nCreate an employee salary table for **Eric L. Adams** similar to that\nshown above, but with real salary and employment records.\n\n:::\n\n#### Calculating Aggregate Salaries\n\nFor high-ranking officials like Mayor Adams, their total compensation is a fixed \nsalary. For other NYC employees, total compensation is computed using their\nhourly wage and the total hours worked (both regular and overtime). As a general\nrule, overtime is paid at 1.5x premium, so an employee who worked 40 hours of\nscheduled time and 20 hours of overtime with a base pay of \\$25 per hour, will\nbe paid: \n\n$$ \\$25 * (40 + 20 * 1.5) = \\$1750 $$\n\nOther employees are paid a \"day rate\" - that is, a fixed amount per day worked.\nFor purposes of this exercise, you can covert hours worked to days at a fixed\nrate of 7.5 hours per day. That is, if an employee is paid \\$100 per day and \nreports 1500 hours worked, you can estimate their pay as: \n\n$$ \\$100 * \\frac{1500}{7.5} = \\$20,000 $$\n\n::: {.callout-tip title=\"Task 3: Calculation of Total Compensation\"}\n\nUse these calculations to compute actual total compensation for each employee\nrecord in our data set. You will need to use a `case_when()` function inside\na `mutate()` command to handle different pay structures. \n\n:::\n\nNow that we have computed total compensation for each city employee, we are \nready to begin our analysis of the city payroll. Before we go further, answer\nsome general questions about this data set to make sure you are comfortable with\nit. \n\n::: {.callout-tip title=\"Task 4: Instructor-Provided Questions\"}\n\nAnswer the following questions about city payroll data. In your final write-up,\ninclude these in the form of a \"quick facts\" bullet as part of your introduction.\n\n1. Which job title has the highest base rate of pay? (If needed, assume a \n   standard 2000 hour work year and no overtime.)\n2. Which individual \\& in what year had the single highest \n   city total payroll (regular and overtime combined)? \n3. Which individual worked the most overtime hours in this data set? \n4. Which agency has the highest average total annual payroll (base and overtime\n   pay per employee)? \n5. Which agency has the most employees on payroll in each year? \n6. Which agency has the highest overtime usage (compared to regular hours)? \n7. What is the average salary of employees who work outside the five boroughs? \n   (That is, whose `work_location_borough` is not one of the five counties.)\n8. How much has the city's aggregate payroll grown over the past 10 years?\n\n:::\n\n::: {.callout-caution title=\"Avoid Using the 'Paid' Columns\"}\n\nOur data set includes columns `regular_gross_paid`, `total_ot_paid`\nand `total_other_paid` that seem like they could be used for this mini-project.\nIf you look closely, you will see that these amounts do not match what you\nmight calculate by hand. This is because these include adjustments for i) use\nof deferred compensation plans; ii) pre-tax benefit withholding; iii) various\n*ad hoc* adjustments negotiated as part of collective bargaining agreements. \nUnderstanding all of these is far beyond the scope of this project, so you should\nuse the simplified calculations described above.\n\n:::\n\n### Policy Analysis\n\nCATS has asked you to analyze three possible policy changes to analyze their \nimpact on overall spending. Your supervisor has suggested two policies and has\nasked you to create a third for analysis. For each policy, \n\n1) compute its impact on city payroll, *i.e.*, determine how the total payroll\n   expenses would have changed if that policy had been in place historically;\n2) determine any other staffing adjustments required to implement that policy, \n   *e.g.*, hiring more employees; and\n3) make a recommendation to the CATS commissioners on whether this policy\n   should be adopted.\n   \n#### Policy I: Capping Salaries at Mayoral Level\n\nMany governments require that the no subordinate employee be paid more than\nthe chief executive (mayor, governor, president). CATS is considering\nrecommending that the city adopt such a policy. To analyze it: \n\n1) Compute the total mayor pay for each fiscal year and identify employees who\n   made more than this amount in the same fiscal year. \n2) Determine total savings if these employees' compensation were capped at the\n   mayor's salary. \n3) Identify which agencies and job titles (if any) would bear the brunt of this\n   policy. \n\n::: {.callout-tip title=\"Task 5: Analyze the Impact of Capping Salaries at Mayoral Level\"}\n\nAnalyze the impact of capping total aggregate compensation for any employee at\nthe level of the mayor's annual salary. Make a recommendation to CATS based\non your findings. \n\n:::\n\n\n#### Policy II: Increasing Staffing to Reduce Overtime Expenses\n\nA major driver of payroll expenditures is the \"1.5x\" premium associated with\novertime work. That is, it may be cheaper to hire two employees to each work\n30 hours to complete a task than to hire one employee to work 40 regular hours\nand 20 overtime hours to complete the same task.[^union] The CATS Commissioners\nare considering urging certain city agencies to hire more employees and to reduce\nthe amount of overtime used.[^overtime]\n\nAnalyze the potential upside of increasing employment to reduce overtime. \n\n1) For each combination of agency and job title, identify the total number of\n   overtime hours worked and see how many full-time employees it would take to\n   replace that much overtime. \n2) For each combination of agency and job title, calculate the total savings\n   possible by converting all overtime hours to regular time hours for (new\n   employees). \n3) Determine the aggregate savings possible by agency. This will let the CATS\n   Commission recommend the agencies where this hiring action would have the \n   largest benefit.\n   \nNote that much of this analysis must be done on an agency + job title basis. \nIf, *e.g.*, NYPD is paying lots of overtime to Sargents, hiring additional\nIT Specialists will not help. Similarly, hiring additional IT Specialists into\nNYPD will not help reduce the need for IT Specialists at the NYC Housing\nAuthority. After completing this analysis at the agency + job title basis, \nyou can aggregate (over job titles) to the agency level, as this is the most\nlikely level at which hiring policy adjustments can be made. \n\n::: {.callout-tip title=\"Task 6: Analyze the Potential Savings of Hiring Additional Employees to Reduce Overtime Expenses\"}\n\nAnalyze the impact of authorizing agencies to hire more employees with the intent\nto reduce overtime expenses. Make sure to report the total potential savings, \nthe total number of employees needed, and the agencies and job titles where\nsuch a change in policy would have the largest impact. The CATS Commissioners\nare particularly interested in a job title analysis as it may be hard to hire\nadditional employees in certain positions.\n\n:::\n\n[^union]: A commonly-raised criticism of public sector unions, such as those\ncovering NYC employees, is that they make it difficult to hire additional\nemployees, thereby directing more overtime hours to their (current) membership.\nI do not know of any reputable analysis supporting or refuting this claim in\nthe context of NYC, though I would be interested in reading one if you come\nacross one in your background reading.\n\n[^overtime]: A [recent NYT\narticle](https://www.nytimes.com/2025/02/04/nyregion/nypd-overtime-hiring.html)\ndescribes recent struggles of the NYPD to increase staffing and to decrease\nthe use of overtime pay. It's not as simple as one might hope... (As a Baruch \nstudent, you have a free subscription to the *New York Times*; find registration\ndetails [here](https://zicklin.baruch.cuny.edu/current/graduate-advisement-hub/campus-resources/free-subscriptions-for-zicklin-students/).)\n\n#### Policy III: Create Your Own Policy Proposal\n\n::: {.callout-tip title=\"Task 7: Create and Analyze an Additional Policy Proposal\"}\n\nCreate your own policy proposal and analyze it in the same manner as the \nprevious two policies. You are encouraged to draw upon real-world proposals \nto reduce city payroll. \n\n:::\n\n## Deliverable: Policy Analysis \"White Paper\"\n\nWrite up your findings in the form of a \"white paper\" to be shared with the CATS\nCommissioners.[^whitepaper] Your submission should include all three policy analyses as well as sufficient background and context for a reader who is not\nalready familiar with NYC pay structures. Note any assumptions or limitations of\nyour analysis and explain how they might introduce error into your projections.\nYou are  encouraged to add images and figures as necessary, as well as linking\nto prior published analyses of NYC payroll. \n\n[^whitepaper]: This [recent white\npaper](https://rockinst.org/wp-content/uploads/2024/12/2024-12-Foundation-Aid-Report.pdf)\nfrom the Rockefeller Institute regarding updating NYS' public school \nfunding formula is a good example of the genre. Clearly your report does not\nneed to be this long or this detailed. \n\n## Extra Credit\n\nThere is no extra credit available on this mini-project beyond that specified\nin the rubric above. In particular, peer evaluators are authorized to give up\nto 8 points (total across all categories) for \n\n1) Reports that are particularly well-written and include, at a minimum, \n   citations to existing analyses and policy proposal documents raised by local\n   think-tanks and political candidates. Such citations are made stronger by\n   a comparison of results and outcomes: you shouldn't just say Think-Tank A\n   made a similar proposal, but you should also see if your results differ with\n   theirs and, if so, report any source(s) of the difference.\n2) Policy proposals that are particularly creative and effective. When awarding\n   extra credit, peer evaluators should be sure to assess the *political*\n   feasibility of proposals. A proposal to, *e.g.*, eliminate all public schools\n   would certainly reduce the city's spending on teachers but stands no chance\n   of actually being implemented. A good policy proposal is both effective and\n   effectible. \n\n\n[^prep]: In particular, if you use the CSV export, the names of the columns \nin the data file will be \"non-syntactic.\" This means they are tricky to use in\n`R` and require use of backticks throughout your code. You will want to change\nthese column names before proceeding. The `rename` function can be useful here. \n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    DATA <- DATA |>\n      rename(column_name=`Column Name`, \n             other_column=`Other Column`)\n    ```\n    :::\n\n\n\n    Note that you will need to change _all_ column names in this fashion.\n\n\n\n------------------------------------------------------------------------\n\nThis work ©2025 by [Michael Weylandt](https://michael-weylandt.com) is licensed\nunder a [Creative Commons BY-NC-SA \n4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en) license.\n![](http://mirrors.creativecommons.org/presskit/buttons/88x31/png/by-nc-sa.png){width=\"10%\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}