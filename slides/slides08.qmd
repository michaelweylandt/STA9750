---
session: "`r session <- 8; session`"
class_date:
  "`r library(tidyverse); 
    tuesday_date <- read_csv('key_dates_tuesday.csv', name_repair='universal') |>
    filter(Course.Element == 'Class Session', 
           Item.Number == session) |>
    pull(Date) |> format('%a %Y-%m-%d'); 
    thursday_date <- read_csv('key_dates_thursday.csv', name_repair='universal') |>
    filter(Course.Element == 'Class Session', 
           Item.Number == session) |>
    pull(Date) |> format('%a %Y-%m-%d'); 
    paste(c(tuesday_date, thursday_date), collapse=' <br>')`"
---

{{< include _setup.qmd >}}

## {{< var course.short >}} Mini-Project #02

Submission due _yesterday_ at 11:45pm

. . . 

*Very* creative!

![](https://jlopez-6.github.io/STA9750-2025-SPRING/gtaiv_cover.jpeg){fig-align="center" width=500}

## {{< var course.short >}} MP#02 - Peer Feedback

Peer feedback assigned on GitHub + email this morning

- $\approx 4$ feedbacks each 
- Take this seriously: around 20\% of this assignment is "meta-review"
- Goal: _rigorous_ _constructive_ critique

. . .

Submissions may not map perfectly to rubric - use your best judgement

. . .

Learn from this! What can you adapt for MP#03? 

## {{< var course.short >}} Mini-Project #03

Now [online](https://michael-weylandt.com/STA9750/miniprojects/mini03.html) - Due **`r get_mp_deadline(3)`**

Topic: `r get_mp_title(3)`

- GitHub post (used for peer feedback) AND Brightspace
- Three Weeks: don't wait until the very end

- *Should be* less demanding than MP #01 and MP#02
  - Lots of little files: practice data management
  - Some data limitations, particularly after `inner_join`
  
. . .

Pay attention to [the rubric](../miniprojects/mini03.html#rubric)

# Thank You! 

## Thank you!

A personal note, if you allow me: 

. . . 

> I'm really enjoying this class - thank you all!

. . . 

> Your effort is not unnoticed - I know this class starts
> "pedal-to-the-metal" but hopefully you've seen just 
> how powerful these tools `R`. 

. . . 

> More than that - I appreciate your good attitude and willingness to
> share your frustrations and triumphs. Reading comments on PA quiz
> this week was uplifting. 

## Continual Improvement

I've set up a [TODO file](https://github.com/michaelweylandt/STA9750/blob/main/TODO.md) with everything I want to improve for next cohort. 

Suggestions welcome. 

. . . 

Every semester, I create new mini-projects.  Ideas and suggestions very
welcome

- Topics and data sets are both great

# Going Forward

## Upcoming Mini-Projects

- MP#04: 
  - Deadline: `r get_mp_deadline(4)`
  - Topic: `r get_mp_title(4)`

## Course Project

[Project](../project.html) should be your *main focus* 
for rest of course

- But you still need to do mini-projects and pre-assignments

## Pre-Assignments

Brightspace - Wednesdays at 11:45

- Reading, typically on course website
- This week: getting data into `R`

Next pre-assignment is **`r get_pa_deadline(next_session)`**

. . .

Thank you for FAQs and (honest) team feedback. Keep it coming!

## Course Support

- Synchronous
  - Office Hours 2x / week
    - MW Office Hours on **Monday** + **Thursday** for rest of semester
    - No OH during Spring Break
- Asynchronous
  - Piazza ($<25$ minute average response time)

# Today

## Warm-Up

"Datasaurus Dozen": 

- `install.packages("datasauRus")` (Note capital `R`)
- `library(datasauRus); data(datasaurus_dozen)`

Create an _animated_ (`gganimate`) plot: 

- $x, y$ scatterplot
- Animate different values of `dataset`

If you are having trouble with `gganimate`, facet instead. 

## Warm-Up

![](https://blog.revolutionanalytics.com/downloads/DataSaurus%20Dozen.gif)

## Diving Deeper into `ggplot2`

First topic: maps!

Install the [`sf` package](https://r-spatial.github.io/sf/): 
**S**imple **F**eatures for Spatial Data 

Exercise: [Lab #08](../labs/lab08.html)

## Breakout Rooms

| Room | Team           |  | Room | Team              |
|------|----------------|--|------|-------------------|
| 1    | Team Mystic    |  | 5    | Money Team + CWo. |
| 2    | Subway Metrics |  | 6    | Lit Group         |
| 3    | Noise Busters  |  | 7    | Cinephiles + VG   |
| 4    | AI Imp. Coll.  |  |      |                   |

## Topic Interactive Tools for Data Analysis 


# Looking Ahead

## Looking Ahead {.smaller}

Due Wednesday at 11:45pm:

- Pre-Assignment #0`r next_session` (Brightspace)
  - Data Import
- MP #02 Peer Feedback on GitHub AND Brightspace

. . . 

Next three weeks: 

- Reading 'clean data' into `R`
- Reading and parsing HTML
- Parsing messy (text) data

. . . 

Teaching Observation by Prof. Brandwein - Next Week

{{< include ../advice/galleries.qmd >}}



# Just FYI: </br> Old Pre-Assignment #08 FAQs

## FAQ: `ggplot2` - `aes()`

What is the `aes` function - stands between data and `geom_`

- Each `geom_` takes a fixed set of "coordinates"
- Each data set has its own column names
- `aes` ties these together

```{r}
library(ggplot2); library(patchwork)
p1 <- ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + geom_point()
p2 <- ggplot(iris, aes(y=Sepal.Length, x=Sepal.Width)) + geom_point()
p1 + p2
```

## FAQ: `ggplot2` - Why do Pie Charts have a bad reputation?

- Use of _area_ and _angle_ over _length_: less accurate perception
- Depends on `fill` to convey category - limited categories

. . . 

But honestly - "insider smugness"  and hate of `Excel`


## FAQ: `ggplot2` - Plot Type Choice

For me: 

- Exploratory mode: 
  - Simple: line, scatter, bar, frequency
- Publication mode:
  - Very context specific

## FAQ: `ggplot2` - Font Sizing

Theme machinery!

```{r}
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width)) + 
    geom_point() + theme(axis.text = element_text(size=24))
```

## FAQ: `ggplot2` - Overplotting / ScatterBlobs

Student asked about "scatterblobs" - typo(?) but I love it!

. . . 

- Density based plotting: hexbins, histograms, rugplots
- Data reduction: summarization or sub-sampling


## FAQ: `ggplot2` - Optimizing Performance

Active project of `ggplot2` team - not much you can do

*Practical advice*: plot less (see previous slide)

## FAQ: `ggplot2` - Beyond Scatter and Line

Some favorite semi-advanced plot types: 

- Violin plots: combination of boxplot and histogram
- Ridgelines
- Beeswarms

_Deep_ rabbit hole

## FAQ: `ggplot2` - Geospatial Visualizations

That's our goal for today!

## FAQ: `ggplot2` - High-Dimensional Data

High-dimensional data: measure many variables per observation ("wide")

High-dimensional data is _hard_ to visualize

. . . 

Approaches: 

- Pair plots for "moderate" HDD
- PCA (or similar dimension reduction. Take 9890!)


## FAQ: `ggplot2` - Creating a Custom Theme

```{r}
my_theme <- theme_bw() + theme(panel.background = element_rect(fill = 'lightblue'))
ggplot(iris, aes(x=Sepal.Length, y = Sepal.Width)) + geom_point() + my_theme
```

Advanced: 

- `theme_set()` - change `ggplot2` defaults
- `.Rprofile` - set code to run every time you start `R`

## FAQ: `ggplot2` - When Not to Use 

`ggplot2` is designed to make good statistical graphics. Sub-par for: 

- Advanced interactivity
- _Really_ big data
- Hardcore customization / "infographics"

## FAQ: `git` WTF

Reference: [Happy Git with R](https://happygitwithr.com/)
