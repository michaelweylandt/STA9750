---
session: "`r session <- 6; session`"
class_date:
  "`r library(tidyverse); 
    tuesday_date <- read_csv('key_dates_tuesday.csv', name_repair='universal') |>
    filter(Course.Element == 'Class Session', 
           Item.Number == session) |>
    pull(Date) |> format('%a %Y-%m-%d'); 
    thursday_date <- read_csv('key_dates_thursday.csv', name_repair='universal') |>
    filter(Course.Element == 'Class Session', 
           Item.Number == session) |>
    pull(Date) |> format('%a %Y-%m-%d'); 
    paste(c(tuesday_date, thursday_date), collapse=' <br>')`"
---

{{< include _setup.qmd >}}

```{r}
#| include: false
#| warning: false
#| message: false
library(tidyverse)
DATES   <- read_csv("key_dates.csv")
TODAY   <- DATES |> 
    filter(`Course Element` == "Class Session", 
           `Item Number` == session)

TODAY_TUESDAY  <- TODAY |> 
    filter(Section == "Tuesday")  |> 
    pull(Date)
TODAY_THURSDAY <- TODAY |> 
    filter(Section == "Thursday") |> 
    pull(Date)

TODAY_TOPIC <- TODAY |>
    pull(Details) |>
    unique()

ROSTERS <- DATES |> 
    filter(Details == "Team Roster Submission") |>
    pull(Date)

PROPOSALS <- DATES |> 
    filter(str_detect(Details, "Project Proposal")) |> 
    pull(Date) |> 
    strftime("%A %b %d") |> 
    paste(collapse=" and ")

library(jsonlite)
library(yaml)

N_TEAMS <- read_yaml("_teaching.yml")$gradedir |>
    file.path("roster.json") |> 
    read_json(simplify=TRUE) |> 
    pull(project_team) |> 
    max(na.rm=TRUE)

N_ON_TEAM <- read_yaml("_teaching.yml")$gradedir |>
    file.path("roster.json") |> 
    read_json(simplify=TRUE) |> 
    filter(!is.na(project_team)) |> 
    NROW()

N_NO_TEAM <- read_yaml("_teaching.yml")$gradedir |>
    file.path("roster.json") |> 
    read_json(simplify=TRUE) |> 
    filter(is.na(project_team)) |> 
    NROW()
```
    
## {{< var course.short >}} Week {{< meta session >}} 

Today: 

- Tuesday Section: `r TODAY_TUESDAY`
- Thursday Section: `r TODAY_THURSDAY`

. . . 

`r TODAY_TOPIC`

# Today

## Today

- Course Administration
- Mini-Project #01 Reflection
- Project Proposal Presentations
- Wrap-Up
  - Life Tip of the Day
- *Time Allowing*: `dplyr` vs `SQL`

## MP #01 - Peer Feedback

Assigned on GitHub - due on `r get_mp_pf_deadline(1)`

- $\approx 4$ feedbacks each 
- Take this seriously: around 20\% of this assignment is "meta-review"
- Goal: _rigorous_ _constructive_ critique

Use [helper functions](https://michael-weylandt.com/STA9750/tips.html#find-peer-feedback-assigned-to-me) 
to find submissions assigned to you. Ask on Piazza if still having
trouble.

## MP #01 - Peer Feedback

Submissions may not map perfectly to rubric - use your best judgement

. . .

Learn from this! What can _you_ adapt for MP#02? 

## MP#01 - Impressions

üëè Thank you for excellent work here! üëè

. . .

I've started reading some submissions - really impressive! 

- Plots (exciting!)
- Sophisticated and Insightful Analyses
- Lots of *K-Pop Demon Hunters*
- Fun for me to get to learn your interests

. . . 

Hopefully automated checks helpful. If you have ideas for
other useful automated 'supports' let me know

## MP#01 - Common Questions

Q: Why doesn't my site look the same on GitHub as it does on my laptop?

. . . 

A: Missing `css` and `js` files. Need to _upload_ everything in `docs`. 

. . . 

New helper function: 

```{r}
#| eval: false
#| echo: true
source("https://michael-weylandt.com/STA9750/load_helpers.R")
mp_submission_ready()
```

Tries to make sure all 'secondary' files are present. 

## MP#01 - Common Questions

Q: Why doesn't my submission have the right URL? 

. . . 

A: _Most_ computers have case-sensitive file names, Mac doesn't, and Windows is iffy. 

. . . 

New helper function: 

```{r}
#| eval: false
#| echo: true
source("https://michael-weylandt.com/STA9750/load_helpers.R")
mp_start()
```

Generates a very basic `qmd` file with the correct file name and some relevant
context. 


## Mini-Project #02

[MP#02 released](../miniprojcts/mini02.html) - Housing Affordability

. . .

**Due ~~`r get_mp_deadline(2)`~~** 2025-10-31 üéÉ

- GitHub post (used for peer feedback) AND Brightspace
- $\approx$ One Month: don't wait until the very end

. . .

Pay attention to [the rubric](../miniprojects/mini02.html#rubric)

-   Writing and presentation are about 50% of your grade
-   Evaluated on *rigor* and *thoughtfulness*, not necessarily correctness

::: {.smallest}

Thanks to HI for help with Windows-compatibility!

:::

## Upcoming Mini-Projects

Tentative Topics

-   MP#03: NYC Trees - `r get_mp_deadline(3)`
-   MP#04: US Employment Surveys - `r get_mp_deadline(4)`

Likely will push back 1 week each - TBD

## Pre-Assignments

Brightspace - day before class

- Reading, typically on course website
- Brightspace auto-grades
  - I have to manually change to completion grading

Next pre-assignment is **`r get_pa_deadline(next_session)`**

. . . 

I missed a few comments in the previous cycle (sorry!) - trying to catch up 
in the next few days

## Course Support

- Synchronous
  - Virtual Office Hours 2x / week on Class Days
- Asynchronous
  - Piazza ($<20$ minute average response time)

## Upcoming Week

Due Wednesday at 11:45pm:

- Pre-Assignment #07 (Brightspace)
  - **Introduction to plotting with `ggplot2`**

Expect back:

-   MP#01 grades
-   Project proposal instructor feedback

## Project Proposals

[Official Description](https://michael-weylandt.com/STA9750/project.html#project-proposal-presentations)

- **6 minute presentation**
- Key topics:
  - *Animating Question*
  - *Team Roster*
- Also discuss: Possible specific questions, data sources, 
  analytical plan, anticipated challenges

. . . 

Most important: team names! 

Previous: Rat Pack, Subway Surfers, Going for Gold, *etc.*

## After Proposals

100% optional discussion of `dplyr` vs `SQL`

- `SQL` is a very common Data Scientist interview topic so if you're not taking
  a database course, might be useful

# On to the Show!

## Tuesday Presentations {.scrollable}

```{r}
#| echo: false
library(jsonlite)
library(yaml)

ROSTER <- read_yaml("_teaching.yml")$gradedir |> 
    file.path("roster.json") |> 
    read_json(simplify=TRUE)

TEAMS <- read_yaml("_teaching.yml")$gradedir |> 
    file.path("teams.json") |> 
    read_json(simplify=TRUE)

library(DT)

PRESENTATIONS <- ROSTER |>
    select(github, active, project_team) |> 
    filter(active) |>
    left_join(TEAMS, join_by(project_team == number)) |>
    mutate(team_shortname = str_extract(name, "(.*) \\(([TR])\\)", group=1), 
           team_day = str_extract(name, "(.*) \\(([TR])\\)", group=2)) |>
    group_by(team_shortname) |>
    summarize(team_day = first(team_day), 
              members = paste(github, collapse=", "))
```

::: {.smaller}

```{r}
#| echo: false
set.seed(9750)
PRESENTATIONS |>
    filter(team_day == "T") |>
    slice_sample(n=100) |>
    select(-team_day) |> 
    rename(`Team Name` = team_shortname, 
           Members=members) |> 
    mutate(`Presentation Order` = row_number()) |>
    select(`Presentation Order`, `Team Name`, Members) |>
    datatable(options=list(info=FALSE,
                           paging=FALSE,
                           searching=FALSE,
                           ordering=FALSE), 
              rownames=FALSE)
```

:::

## Thursday Presentations {.scrollable}

::: {.smaller}

```{r}
#| echo: false
set.seed(9750)
PRESENTATIONS |>
    filter(team_day == "R") |>
    slice_sample(n=100) |>
    select(-team_day) |> 
    rename(`Team Name` = team_shortname, 
           Members=members) |> 
    mutate(`Presentation Order` = row_number()) |>
    select(`Presentation Order`, `Team Name`, Members) |>
    datatable(options=list(info=FALSE,
                           paging=FALSE,
                           searching=FALSE,
                           ordering=FALSE), 
              rownames=FALSE)
```

:::

# Wrap-Up

## Orientation

- Communicating Results (`quarto`)  ‚úÖ
- `R` Basics  ‚úÖ
- Data Manipulation in `R`  ‚úÖ
- Data Visualization in `R`  ‚¨ÖÔ∏è
- Getting Data into `R`
- Statistical Modeling in `R`

## Upcoming Work

Upcoming work from [course calendar](../index.qmd#calendar)

::: {.incremental}

- [Mini-Project #01 Peer Feedback](../miniprojects.html) due on `r get_mp_pf_deadline(1)`
- [Pre-Assignment #0`r next_session`](../preassigns/pa07.html) due `r get_pa_deadline(next_session)`
- [Mini-Project #02](../miniprojects/mini02.html) due on ~~`r get_mp_deadline(2)`~~ 2025-10-31 at 11:59pm

:::


{{< include ../advice/register_to_vote.qmd >}}

## Musical Treat

</br>

{{< video https://www.youtube.com/watch?v=LBIo5QuEeaA width="80%" height="400px">}}

# Optional Material (Time Allowing)

